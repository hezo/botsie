{
  "name": "node-xml-lite",
  "version": "0.0.2",
  "description": "Pure javascript XML ANSI/Unicode SAX parser for Node.js",
  "keywords": [
    "xml",
    "sax",
    "ansi"
  ],
  "dependencies": {
    "iconv-lite": ">=0.2.0"
  },
  "homepage": "http://github.com/hgourvest/node-xml-lite",
  "repository": {
    "type": "git",
    "url": "git://github.com/hgourvest/node-xml-lite"
  },
  "author": {
    "name": "Henri Gourvest",
    "email": "hgourvest@gmail.com",
    "url": "http://github.com/hgourvest"
  },
  "main": "./index.js",
  "readme": "# node-xml-lite\n\n - This is a pure javascript XML SAX parser for Node.js.\n - The specificity of this xml parser is that it can parse a document from a Buffer.\n - It relies on iconv-lite to decode the text according to the code page of the document.\n\n## Install\n\n    npm install node-xml-lite\n\n## Simple usage\n    \n### Parse a file \n \n    xml = require(\"node-xml-lite\");\n    \n    xml.parseFile(filename, function(err, root){\n      ...\n    });\n    \n### Parse a file synchronously\n\n    xml.parseFileSync(filename));\n    \n### Parse a string\n\n    xml.parseString(\"<xml>hello</xml>\");\n\n### Parse a buffer\n\n    xml.parseBuffer(new Buffer(\"<xml>hello</xml>\"));\n\n## Advanced usage\n\n### parsing a file in SAX mode\n\n    xml.SAXParseFile(filename,\n      function(state, a, b) {\n        switch (state) {\n          case xml.xtOpen:\n            // a is node name\n            ...\n            break;\n          case xml.xtClose\n            ...\n            break;\n          case xml.xtAttribute:\n            // a is attribute name\n            // b is attribute value\n            ...\n            break;\n          case xml.xtText:\n            // a is a text value\n            break;\n          case xml.xtCData:\n            // a is a CDATA text value\n            ...\n            break;\n          case xml.xtComment\n            // a is a comment text value\n            ...\n            break;\n        };\n        // tell the parser to continue\n        return true;\n      },\n      function(err){\n        // parser done, check error\n        ...\n      }\n    );\n    \nyou can also use the sync function, \n\n    xml.SAXParseFileSync(filename, event)\n    \n### providing your own data to SAX parser\n\n    var parser = new xml.XMLParser();\n    var ret = parser.parserBuffer(buffer, len, event);\n    if (ret === true) {\n      // stopped by event result\n    } else\n    if (ret === false) {\n      // there is a parsing error at:\n      //   parser.line \n      //   parser.col\n    } else\n    if (ret === undefined) {\n      // it is ok, continue ...\n    }\n\nyou can also parse a string\n\n    var ret = parser.parseString(str, event);",
  "readmeFilename": "README.md",
  "_id": "node-xml-lite@0.0.2",
  "dist": {
    "shasum": "bd07dc325e45d969e7d8a14cf65fb07fa4e88896"
  },
  "_from": "node-xml-lite"
}
